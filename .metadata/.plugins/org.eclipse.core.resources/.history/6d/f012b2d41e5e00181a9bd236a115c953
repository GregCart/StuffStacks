package SQL_Conns;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Logger;

import org.apache.commons.io.IOUtils;

import Objects.Song;
import testSolutions.Usables;

@SuppressWarnings("unused")
public class SS_Song_Stmts {
	
	private static Boolean duplicate;
	
	public static Boolean ifExists(Connection con, Song s) throws SQLException {
		PreparedStatement stmt = con.prepareStatement("Select * FROM stuffstacks.cloud WHERE book_title = ?" + s.getName());
		ResultSet rs = stmt.executeQuery();
		if (rs.wasNull()) {
			return false;
		} else {
			return true;
		}
}
	
	public static void insertSong(Connection con, Song s) throws SQLException {
		duplicate = ifExists(con, s);
		if (duplicate == true) {
			Logger.getLogger(s.getName() + "already exists!"); 
		} else {
			try {
				Statement stm = con.createStatement();
				stm.executeQuery("INSERT INTO stuffstacks.cloud VALUES (" + Usables.useSong(s) + ")");
				Logger.getLogger(s.toString());
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	public static Song retrieveSong(Connection con, Song s) throws SQLException, IOException {
		duplicate = ifExists(con, s);
		if (duplicate == true) {
			Statement stm = con.createStatement();
			ResultSet rs = stm.executeQuery("Select * FROM stuffstacks.cloud WHERE song_name = " + s.getName());
			//use rs to create song
			if (rs.getString(9) == null) {
				InputStream in = rs.getBlob(8).getBinaryStream();
				File f = new File(rs.getString(2));
				FileOutputStream out = new FileOutputStream(f);
				IOUtils.copy(in, out);
				s = new Song(rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getInt(7), f, rs.getDate(10), rs.getBoolean(11));
			} else if (rs.getString(8) == null) {
				URL u = new URL(rs.getString(9));
				s = new Song(rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getInt(7), u, rs.getDate(10), rs.getBoolean(11));
			} else {
				InputStream in = rs.getBlob(8).getBinaryStream();
				File f = new File(rs.getString(2));
				FileOutputStream out = new FileOutputStream(f);
				IOUtils.copy(in, out);
				URL u = new URL(rs.getString(9));
				s = new Song(rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getInt(7), f, u, rs.getDate(10), rs.getBoolean(11));
			}
			return s;
		} else {
			Logger.getLogger(s.getName() + "doesn't exist!");
			return null;
		}
	}
	
}